{"version":3,"sources":["assets/spider.png","components/BigButton/BigButton.component.js","pages/Home/Home.component.js","HOC/withGeolocation.js","components/Distance/Distance.container.js","components/Distance/Distance.component.js","components/SubmitButton/SubmitButton.component.js","components/SubmitButton/SubmitButton.container.js","pages/Step/Step.component.js","pages/LastStep/LastStep.component.js","pages/Cheat/Cheat.container.js","pages/Cheat/Cheat.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BigButton","style","backgroundColor","this","props","color","className","onClick","onPress","fontWeight","label","Component","Home","navigateToCheat","history","push","handleButtonPress","bind","handleButtonRelease","buttonPressTimer","setTimeout","clearTimeout","src","spider","position","right","top","height","alt","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","onMouseLeave","textAlign","role","fontSize","aria-label","padding","teams","map","team","margin","key","id","textDecoration","to","steps","withGeolocation","geolocated","positionOptions","enableHighAccuracy","maximumAge","timeout","Infinity","watchPosition","userDecisionTimeout","suppressLocationOnMount","isOptimisticGeolocationEnabled","DistanceContainer","coords","clue","isGeolocationAvailable","isGeolocationEnabled","distanceToClue","Math","floor","distance","latitude","longitude","TRESHOLD_DISTANCE","SubmitButton","checkPosition","nextStepIndex","findIndex","step","alert","SubmitButtonContainer","withRouter","Step","match","find","params","teamId","stepId","paddingTop","paddingBottom","text","marginTop","marginBottom","pictureUrl","width","window","innerWidth","LastStep","render","onSubmit","handleSubmit","type","value","state","onChange","handleChange","event","setState","target","regex","RegExp","killer","preventDefault","React","CheatContainer","index","AppRouter","basename","process","path","exact","component","Cheat","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e7c5cfb4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spider.5e3f12c9.png\";","import React, { Component } from \"react\";\nimport \"./BigButton.css\";\n\nexport class BigButton extends Component {\n  render() {\n    return (\n      <div\n        style={{ backgroundColor: this.props.color }}\n        className=\"button\"\n        onClick={this.props.onPress}\n      >\n        <span\n          style={{\n            fontWeight: 600\n          }}\n          className=\"label\"\n        >\n          {this.props.label}\n        </span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Home.css\";\nimport \"../../App.css\";\nimport { Link } from \"react-router-dom\";\nimport { BigButton } from \"../../components/BigButton\";\nimport teams from \"../../config.json\";\nimport spider from \"../../assets/spider.png\";\n\nexport class Home extends Component {\n  constructor() {\n    super();\n    this.handleButtonPress = this.handleButtonPress.bind(this);\n    this.handleButtonRelease = this.handleButtonRelease.bind(this);\n  }\n\n  navigateToCheat = () => {\n    this.props.history.push(\"/cheat\");\n  };\n\n  handleButtonPress() {\n    this.buttonPressTimer = setTimeout(this.navigateToCheat, 1500);\n  }\n  handleButtonRelease() {\n    clearTimeout(this.buttonPressTimer);\n  }\n\n  render() {\n    return (\n      <div className=\"Container\">\n        <img src={spider} style={{ position: \"absolute\", right: 0, top: 0, height: 100 }} alt=\"\"/>\n        <div className=\"VerticallyCentered\">\n          <div\n            onTouchStart={this.handleButtonPress}\n            onTouchEnd={this.handleButtonRelease}\n            onMouseDown={this.handleButtonPress}\n            onMouseUp={this.handleButtonRelease}\n            onMouseLeave={this.handleButtonRelease}\n            style={{ textAlign: \"center\" }}\n          >\n            <span role=\"img\" style={{ fontSize: 54 }} aria-label=\"ghost\">\n              ðŸ‘»\n            </span>\n          </div>\n          <span className=\"Intro\">\n            Bonjour dÃ©tective, de quelle agence fais-tu partie ?\n          </span>\n          <div style={{ padding: 16 }}>\n            {teams.map(team => (\n              <div style={{ margin: 16 }} key={team.id}>\n                <Link\n                  style={{ textDecoration: \"none\", color: \"#FFF\" }}\n                  to={`/step/${team.id}/${team.steps[0].id}`}\n                >\n                  <BigButton color={team.color} label={team.label}></BigButton>\n                </Link>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { geolocated } from \"react-geolocated\";\n\nexport const withGeolocation = geolocated({\n  positionOptions: {\n    enableHighAccuracy: true,\n    maximumAge: 0,\n    timeout: Infinity\n  },\n  watchPosition: true,\n  userDecisionTimeout: null,\n  suppressLocationOnMount: false,\n  isOptimisticGeolocationEnabled: false\n});\n","import { Distance } from \"./Distance.component\";\nimport { withGeolocation } from \"../../HOC/withGeolocation\";\n\nexport const DistanceContainer = withGeolocation(Distance);\n","import React from \"react\";\nimport distance from \"gps-distance\";\n\nexport function Distance({\n  coords,\n  clue,\n  isGeolocationAvailable,\n  isGeolocationEnabled\n}) {\n  const distanceToClue = coords\n    ? Math.floor(\n        distance(\n          coords.latitude,\n          coords.longitude,\n          clue.coords.latitude,\n          clue.coords.longitude\n        ) * 1000\n      )\n    : 0;\n\n  return !isGeolocationAvailable ? (\n    <div>Your browser does not support Geolocation</div>\n  ) : !isGeolocationEnabled ? (\n    <div>Geolocation is not enabled</div>\n  ) : coords ? (\n    <>\n      <span>DÃ©tective ! Tu es Ã  {distanceToClue}m de ton indice !</span>\n    </>\n  ) : (\n    <div>Getting the location data</div>\n  );\n}\n","import React, { Component } from \"react\";\nimport distance from \"gps-distance\";\nimport \"./SubmitButton.css\";\n\nconst TRESHOLD_DISTANCE = 50;\n\nexport class SubmitButton extends Component {\n  checkPosition = () => {\n    const { team, clue, coords } = this.props;\n\n    const distanceToClue = Math.floor(\n      distance(\n        coords.latitude,\n        coords.longitude,\n        clue.coords.latitude,\n        clue.coords.longitude\n      ) * 1000\n    );\n    const nextStepIndex = team.steps.findIndex(step => step.id === clue.id) + 1;\n    if (distanceToClue <= TRESHOLD_DISTANCE) {\n      if (team.steps[nextStepIndex]) {\n        this.props.history.push(\n          `/step/${team.id}/${team.steps[nextStepIndex].id}`\n        );\n      } else {\n        this.props.history.push(`/laststep-didyoutrytoforgeurl/${team.id}`);\n      }\n    } else {\n      alert(\n        `ðŸ¤” Hum, je ne crois pas... Je te vois Ã  ${distanceToClue}m de l'indice ${nextStepIndex}`\n      );\n    }\n  };\n\n  render() {\n    const { coords } = this.props;\n    if (coords) {\n      return (\n        <button\n          style={{\n            backgroundColor: this.props.team.color\n          }}\n          onClick={this.checkPosition}\n        >\n          J'y suis !\n        </button>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n","import { withGeolocation } from \"../../HOC/withGeolocation\";\nimport { SubmitButton } from \"./SubmitButton.component\";\nimport { withRouter } from \"react-router-dom\";\n\nexport const SubmitButtonContainer = withRouter(withGeolocation(SubmitButton));\n","import React from \"react\";\nimport teams from \"../../config.json\";\nimport \"../../App.css\";\nimport { Distance } from \"../../components/Distance\";\nimport { SubmitButton } from \"../../components/SubmitButton\";\nimport spider from \"../../assets/spider.png\";\n\nexport function Step({\n  match,\n  isGeolocationAvailable,\n  isGeolocationEnabled,\n  coords\n}) {\n  const team = teams.find(team => team.id === match.params.teamId);\n  const clue = team.steps.find(step => step.id === match.params.stepId);\n\n  return (\n    <>\n      <div className=\"Container\">\n      <img src={spider} style={{ position: \"absolute\", right: 0, top: 0, height: 100 }} alt=\"\"/>\n        <div style={{ paddingTop: 32, paddingBottom: 128 }}>\n          <div style={{ textAlign: \"center\" }}>\n            <span role=\"img\" style={{ fontSize: 54 }} aria-label=\"ghost\">\n              ðŸ‘»\n            </span>\n          </div>\n          <br />\n          <span>{clue.text}</span>\n          <div style={{ textAlign: \"center\" }}>\n            <img\n              style={{ marginTop: 16, marginBottom: 16 }}\n              src={clue.pictureUrl}\n              alt=\"indice\"\n              width={(5 * window.innerWidth) / 6}\n            />\n            <SubmitButton team={team} clue={clue} />\n          </div>\n        </div>\n      </div>\n      <div className=\"Footer\">\n        <Distance clue={clue} />\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"../../App.css\";\nimport teams from \"../../config.json\";\n\nexport class LastStep extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\" };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { match } = this.props;\n    const team = teams.find(team => team.id === match.params.teamId);\n    const regex = new RegExp(team.killer, \"i\");\n    if (this.state.value.match(regex)) {\n      alert(\n        `Bravo dÃ©tective ! Tu as trouvÃ© le meurtrier ! Rendez vous au CafÃ© Bienvenue, 4 Rue du Bourg l'AbbÃ©, 75003 Paris`\n      );\n    } else {\n      alert(`Dayum ! C'est ratÃ© ðŸ˜° Retente ta chance !`);\n    }\n    event.preventDefault();\n  }\n\n  render = () => {\n    return (\n      <>\n        <div className=\"Container\">\n          <div style={{ paddingTop: 32, paddingBottom: 128 }}>\n            <div style={{ textAlign: \"center\" }}>\n              <span role=\"img\" style={{ fontSize: 54 }} aria-label=\"ghost\">\n                ðŸ‘»\n              </span>\n            </div>\n            <span>\n              Alors dÃ©tective as-tu trouvÃ© le nom de l'assassin que tu\n              poursuivait ? As tu enfin rÃ©solu le mystÃ¨re de tous ces crimes ?\n              <br />\n              Tente ta chance en Ã©crivant le nom de ton suspect !\n            </span>\n            <div style={{ textAlign: \"center\" }}>\n              <form onSubmit={this.handleSubmit}>\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.handleChange}\n                />\n                <input type=\"submit\" value=\"Envoyer\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  };\n}\n","import { Cheat } from \"./Cheat.component\";\nimport { withGeolocation } from \"../../HOC/withGeolocation\";\n\nexport const CheatContainer = withGeolocation(Cheat);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../App.css\";\nimport teams from \"../../config.json\";\n\nexport function Cheat({ coords }) {\n  return (\n    <div className=\"Container\">\n      {coords ? (\n        <div>\n          DÃ©tective! Tu es gÃ©olocalisÃ©.e aux coordonnÃ©es\n          <br />\n          <strong>Lat :</strong>\n          {coords.latitude}\n          <br />\n          <strong>Lon :</strong>\n          {coords.longitude}\n        </div>\n      ) : (\n        <div>?</div>\n      )}\n      {teams.map(team => (\n        <div style={{ margin: 16, textAlign: \"center\" }}>\n          <div style={{ marginBottom: 8 }}>\n            <strong style={{ color: team.color }}>{team.label}</strong>\n          </div>\n          {team.steps.map((step, index) => {\n            return (\n              <div>\n                <Link\n                  style={{ textDecoration: \"none\", color: \"#FFF\" }}\n                  to={`/step/${team.id}/${team.steps[index].id}`}\n                >\n                  <strong>Ã‰tape {index + 1}</strong>\n                </Link>\n              </div>\n            );\n          })}\n          <div>\n            <Link\n              style={{ textDecoration: \"none\", color: \"#FFF\" }}\n              to={`/laststep-didyoutrytoforgeurl/${team.id}`}\n            >\n              <strong>DerniÃ¨re Ã©tape</strong>\n            </Link>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { Home } from \"./pages/Home\";\nimport { Step } from \"./pages/Step\";\nimport { LastStep } from \"./pages/LastStep\";\nimport { Cheat } from \"./pages/Cheat\";\n\nfunction AppRouter() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/step/:teamId/:stepId\" exact component={Step} />\n      <Route\n        path=\"/laststep-didyoutrytoforgeurl/:teamId/\"\n        exact\n        component={LastStep}\n      />\n      <Route path=\"/cheat\" exact component={Cheat} />\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}